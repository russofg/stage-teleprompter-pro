name: Build Electron App

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-macos:
    runs-on: macos-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Set environment variables
        run: |
          echo "ROLLUP_SKIP_NATIVE=true" >> $GITHUB_ENV
          echo "VITE_SKIP_NATIVE=true" >> $GITHUB_ENV

      - name: Clean environment
        run: |
          rm -rf node_modules package-lock.json dist dist-electron
          npm cache clean --force

      - name: Install dependencies
        run: npm install

      - name: Build application
        run: npm run build

      - name: Build Electron app
        run: npm run electron-build

      - name: List generated files
        run: |
          echo "Files in dist-electron:"
          find dist-electron -type f

      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: dist-electron/*.dmg
          retention-days: 30

  build-windows:
    runs-on: windows-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Set Windows environment variables
        run: |
          echo "ROLLUP_SKIP_NATIVE=true" >> $env:GITHUB_ENV
          echo "VITE_SKIP_NATIVE=true" >> $env:GITHUB_ENV
        shell: pwsh

      - name: Clean Windows environment
        run: |
          if (Test-Path "node_modules") { Remove-Item -Recurse -Force "node_modules" }
          if (Test-Path "package-lock.json") { Remove-Item -Force "package-lock.json" }
          if (Test-Path "dist") { Remove-Item -Recurse -Force "dist" }
          if (Test-Path "dist-electron") { Remove-Item -Recurse -Force "dist-electron" }
          npm cache clean --force

      - name: Install dependencies
        run: npm install --no-optional

      - name: Force reinstall Rollup
        run: npm install rollup --no-optional

      - name: Setup Windows-specific Vite config
        run: |
          Copy-Item "vite.config.windows.ts" "vite.config.ts" -Force
          Write-Host "Using Windows-specific Vite configuration"

      - name: Build application (Windows optimized)
        run: npm run build:windows

      - name: Build Electron app
        run: npm run electron-build

      - name: List generated files
        run: |
          Write-Host "Files in dist-electron:"
          Get-ChildItem "dist-electron" -Recurse | ForEach-Object { Write-Host $_.FullName }

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: dist-electron/*.exe,dist-electron/*.msi
          retention-days: 30
